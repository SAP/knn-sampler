[imputation_algorithms]
# Imputers that will be run: list of values in
# KnnSampler | LinearImputer | RandomForestImputer | KnnImputer | KNNxKDEImputer
imputation_algorithms = KnnSampler, LinearImputer, RandomForestImputer, KnnImputer, KNNxKDEImputer
# Uncertainty parameters for compatible Imputers

# Plotting configuration
[plot]
# -> True | False
plot_results = True

# Profiling configuration
[profile]
# -> True | False
profile = False
# -> FilePath (file does not have to exist, this option can also be omitted / commented)
dump_path = "assets/profiling/profiling_results.pkl"
# -> True | False
print_stats = False

# Datasets Configuration :
# you can create your own datasets by creating a section ([dataset_name])
# specify the mandatory fields :
# 1. missing_rate : rate of the missing values -> [0, 1] OR missing_values : total number of missing values -> [0, sample_size]
# 2. missing_type : algorithms used to create missing data -> MAR | MCAR
#    (MAR creates a chunk of missing data, its start and end can be specified with the MAR_chunk_start and MAR_chunk_end properties, defaults to random)

# To use generated data :
# 1. specify type = "generated"
# 2. specify the mandatory generated related fields
#    sample_size  : the number of generated values -> [1, +∞[
#    linear_interpolation_ratio : the ratio for the linear interpolation -> ]0, +∞[

# To use your own excel dataset by adding these parameters :
# 1. specify type = "excel"
# 2. specify the mandatory excel related fields :
#    path   : the path of your excel file (from project root) -> string
#    sheet  : the name of the sheet in your excel file -> string
#    input  : the name of the input column in your excel file -> string
#    target : the name of the target column in your excel file -> string
# 3. specify (or not) the optional excel related fields
#    sample_size  : the number of used values -> [1, +∞[, if not specified, the entire file will be read


[publication_dataset]
type = excel
path = assets/datasets/publishable_data.xlsx
sheet = Sheet1
input = IRRADIATION
target = DC_POWER
missing_rate = 0.7
missing_values = 2000
missing_type = MCAR
sample_size = 1000

[data_generation]
type = generated
sample_size = 10000
missing_rate = 0.3
# missing_values = 800
geometry_type = ring
linear_interpolation_ratio = 1
missing_type = MCAR
# only use below options for missing type "MAR"
MAR_chunk_start = 0.5
MAR_chunk_end = 1.5

# Select the dataset that will be used
[dataset_selection]
used_dataset = data_generation
